# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  dmd_version: 2.087.0

trigger:
- master


stages:
- stage: Build
  jobs:
  
  - job: linux_cli_unittest_x86_64_dmd_stable
    displayName: Linux CLI Unittest x86_64 DMD stable
    pool:
      name: Hosted Ubuntu 1604
    steps:
    - bash: |
        wget http://downloads.dlang.org/releases/2.x/$(dmd_version)/dmd_$(dmd_version)-0_amd64.deb
        sudo dpkg -i dmd_$(dmd_version)-0_amd64.deb
        dmd --version
        dub --version
      displayName: 'Install DMD'
    - bash: 'dub build -c CLI -b unittest --arch=x86_64'
      displayName: 'Build CLI Unittest x86_64'

  - job: linux_cli_debug_x86_64_dmd_stable
    displayName: Linux CLI Debug x86_64 DMD stable
    pool:
      name: Hosted Ubuntu 1604
    steps:
    - bash: |
        wget http://downloads.dlang.org/releases/2.x/$(dmd_version)/dmd_$(dmd_version)-0_amd64.deb
        sudo dpkg -i dmd_$(dmd_version)-0_amd64.deb
        dmd --version
        dub --version
      displayName: 'Install DMD'
    - bash: 'dub build -c CLI -b debug --arch=x86_64'
      displayName: 'Build CLI Debug x86_64'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'Build/Drill-CLI-linux-x86_64-debug'
        artifact: 'x86_64 Linux DMD Debug CLI'

  - job: linux_cli_release_x86_64_dmd_stable
    displayName: Linux CLI Release x86_64 DMD stable
    pool:
      name: Hosted Ubuntu 1604
    steps:
    - bash: |
        wget http://downloads.dlang.org/releases/2.x/$(dmd_version)/dmd_$(dmd_version)-0_amd64.deb
        sudo dpkg -i dmd_$(dmd_version)-0_amd64.deb
        dmd --version
        dub --version
      displayName: 'Install D Linux'
    - bash: |
        dub build -c CLI -b release --arch=x86_64
      displayName: 'dub build -c CLI -b release'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: Build/Drill-CLI-linux-x86_64-release
        artifact: 'x86_64 Linux DMD Release CLI'

  - job: linux_package_cli_release_x86_64_dmd_stable
    dependsOn: linux_cli_release_x86_64_dmd_stable
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: '609befef-9c2f-4601-a879-747a87fb063c'
        definition: '6'
        buildVersionToDownload: 'latest'
        itemPattern: 'x86_64 Linux DMD Release CLI'
        targetPath: '$(Pipeline.Workspace)'
    - task: ZipDirectory@1
      inputs:
        ItemSpec: 'x86_64 Linux DMD Release CLI'

  - job: linux_package_cli_debug_x86_64_dmd_stable
    dependsOn: linux_cli_debug_x86_64_dmd_stable
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: '609befef-9c2f-4601-a879-747a87fb063c'
        definition: '6'
        buildVersionToDownload: 'latest'
        itemPattern: 'x86_64 Linux DMD Debug CLI'
        targetPath: '$(Pipeline.Workspace)'
    - task: ZipDirectory@1
      inputs:
        ItemSpec: 'x86_64 Linux DMD Debug CLI'




      

# - stage: install_d
#   jobs:
#   - job: Windows
#     pool:
#       vmImage: 'vs2017-win2016'
#     steps:
#     - script: echo hello from Windows
#   - job: OSX
#     pool:
#       vmImage: 'macOS-10.13'
#     steps:
#     - bash: wget http://downloads.dlang.org/releases/2.x/$(dmd_version)/dmd.$(dmd_version).osx.tar.xz
#     - bash: 7z -aoa x dmd.$(dmd_version).osx.tar.xz
#     - bash: 7z -aoa x dmd.$(dmd_version).osx.tar
#     - bash: chmod +x dmd2/osx/bin/dub
#     - bash: dmd2/osx/bin/dub --version
#     - bash: chmod +x dmd2/osx/bin/dmd
#     - bash: dmd2/osx/bin/dmd --version
    
#   - job: Linux
#     pool:
#       vmImage: 'ubuntu-16.04'
#     steps:
#     - bash: wget -c http://downloads.dlang.org/releases/2.x/$(dmd_version)/dmd.$(dmd_version).linux.tar.xz
#     - bash: 7z x -aos dmd.$(dmd_version).linux.tar.xz
#     - bash: 7z x -aos dmd.$(dmd_version).linux.tar
#     - bash: chmod +x dmd2/linux/bin64/dub
#     - bash: dmd2/linux/bin64/dub --version
#     - bash: chmod +x dmd2/linux/bin64/dmd
#     - bash: dmd2/linux/bin64/dmd --version

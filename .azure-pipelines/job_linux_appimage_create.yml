jobs:
- job: GTK_AppImage
  pool:
    name: Hosted Ubuntu 1604
  steps:
  - task: DownloadGitHubRelease@0
    inputs:
      connection: githubtoken
      userRepository: $(Build.Repository.Name)
      defaultVersionType: specificTag
      version: $(Build.BuildNumber)
      itemPattern: Drill-$(Build.BuildNumber)-linux-x86_64.zip
      downloadPath: $(System.DefaultWorkingDirectory)
  - bash: 7z x Drill-$(Build.BuildNumber)-linux-x86_64.zip -oDrill-$(Build.BuildNumber)-linux-x86_64
  - script: sudo apt install -y appstream
    displayName: Install appstreamcli
  - script: mkdir -p Drill.AppDir
    displayName: mkdir -p Drill.AppDir
  - script: cp -R Drill-$(Build.BuildNumber)-linux-x86_64/* Drill.AppDir
    displayName: Copy release build to AppDir
  - script: mkdir -p Drill.AppDir/usr/share/metainfo
    displayName: mkdir -p Drill.AppDir/usr/share/metainfo
  - script: mkdir -p Drill.AppDir/usr/share/applications
    displayName: mkdir -p Drill.AppDir/usr/share/applications
  - script: cp Assets/GTK-Linux/drill.software.appdata.xml Drill.AppDir/usr/share/metainfo
    displayName: Copy appdata.xml to Drill.AppDir/usr/share/metainfo
  - script: cp Assets/GTK-Linux/drill-search-gtk.desktop Drill.AppDir/usr/share/applications
    displayName: Copy .desktop to Drill.AppDir/usr/share/applications
  - script: ln -s drill-search-gtk Drill.AppDir/AppRun
    displayName: Link AppRun to Drill executable
  - script: chmod +x Drill.AppDir/AppRun
    displayName: Set AppRun executable
  - script: chmod +x Drill.AppDir/drill-search-gtk
    displayName: Set Drill GTK binary executable
  - script: cp Assets/GTK-Linux/drill-search-gtk.svg Drill.AppDir
    displayName: Copy icon to AppDir
  - script: wget https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage -O appimagetool-x86_64.AppImage
    displayName: Download AppImageTool
  - script: chmod +x appimagetool-x86_64.AppImage
    displayName: Make AppImageTool executable
  - script: export ARCH=x86_64 && ./appimagetool-x86_64.AppImage Drill.AppDir Drill-$(Build.BuildNumber)-x86_64.AppImage
    displayName: Create AppImage
  - script: test -f Drill-$(Build.BuildNumber)-x86_64.AppImage
    displayName: test Drill-$(Build.BuildNumber)-x86_64.AppImage exists
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: Drill-$(Build.BuildNumber)-x86_64.AppImage
      artifact: Drill-$(Build.BuildNumber)-x86_64.AppImage
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'githubtoken'
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      target: '$(Build.SourceVersion)'
      tagSource: 'manual'
      tag: $(Build.BuildNumber)
      title: $(Build.BuildNumber)
      releaseNotesSource: 'input'
      releaseNotes: $(Build.BuildNumber)
      isPreRelease: true
      assetUploadMode: replace
      addChangeLog: false
      assets: Drill-$(Build.BuildNumber)-x86_64.AppImage






%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 2
%%Creator: CorelDRAW 11
%%Title: 47.eps
%%CreationDate: Sat Nov 30 15:55:35 2002
%%For: ldn
%%DocumentProcessColors: Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 11 Version 11.633
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel11Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
72.67578 134.27802 120.39591 178.56737 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
72.96548 140.00372 m
72.67578 159.69770 L
84.39420 166.55953 L
101.79354 178.27767 L
108.94479 178.56737 L
116.38573 170.56942 L
120.39591 143.99150 L
114.95991 134.27802 L
92.39216 134.85742 L
72.96548 140.00372 L
@c
F

@rax %Note: Object
44.38233 17.42854 151.51861 137.12967 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
49.81833 83.70652 m
55.81106 100.57096 L
67.52948 114.56192 L
73.52249 126.56976 L
76.10655 130.55754 L
118.94769 137.12967 L
127.52504 123.69600 L
151.51861 66.28479 L
143.23124 56.01458 L
121.50992 19.70079 L
116.38573 18.56466 L
76.66356 17.42854 L
48.94951 48.28394 L
44.38233 73.99304 L
49.81833 83.70652 L
@c
F

@rax %Note: Object
71.76869 119.29635 115.26605 166.55953 @E
 0 O 0 @g
0.00 0.15 1.00 0.00 k
/$fm 0 def
104.66731 127.41647 m
104.66731 127.41647 103.24148 127.70617 107.22954 128.57499 C
111.23943 129.42142 111.26183 130.26813 112.37556 131.42665 C
113.51197 132.56277 114.09109 135.14712 114.09109 137.99877 C
114.09109 140.85014 115.51691 149.13780 115.22721 151.41005 C
114.95991 153.70469 110.08091 162.25965 108.09836 163.41817 C
106.09313 164.55430 83.81480 166.55953 83.81480 166.55953 C
76.95326 161.12353 L
71.80696 156.28904 L
72.96548 140.85014 L
72.96548 140.85014 71.51726 135.99354 71.80696 134.01071 C
72.09666 132.00576 74.97043 129.71112 76.10655 128.57499 C
77.24296 127.41647 81.52016 122.82718 82.94598 121.42346 C
84.39420 119.99764 84.68391 118.57209 88.09228 119.70822 C
91.52334 120.84435 93.52828 120.84435 96.11263 122.84929 C
98.67458 124.85452 104.66731 127.41647 104.66731 127.41647 C
@c
F

@rax %Note: Object
90.70498 140.56072 114.09109 162.04195 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
91.52334 151.69975 m
92.39216 153.99439 93.52828 158.27187 95.51112 159.69770 C
97.51606 161.12353 101.81565 162.30416 104.37789 161.99235 C
106.96195 161.70265 111.79644 159.14069 112.95496 157.13575 C
114.09109 155.13052 114.09109 147.13285 114.09109 147.13285 C
113.51197 140.56072 L
109.52419 140.85014 L
100.94683 144.28120 L
99.52101 144.28120 L
99.52101 144.28120 98.09518 143.72419 93.79559 145.99644 C
89.51811 148.29109 90.65424 149.40510 91.52334 151.69975 C
@c
F

@rax %Note: Object
72.09354 140.00372 90.49124 164.58661 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
82.38926 145.41732 m
82.52277 145.55083 82.79008 145.72913 83.14668 145.92983 C
84.88431 146.88765 88.67169 148.29109 88.67169 148.29109 C
88.67169 148.29109 92.36976 157.69276 89.22869 161.41323 C
86.10973 165.13370 79.24791 164.55430 79.24791 164.55430 C
79.24791 164.55430 71.82935 160.27682 72.09666 158.56157 C
72.38608 156.84605 72.67578 150.85332 72.96548 150.00661 C
73.23279 149.13780 74.39131 140.00372 74.39131 140.00372 C
76.95326 141.13984 L
80.67373 143.99150 L
80.67373 143.99150 81.54255 144.54850 82.38926 145.41732 C
@c
F

@rax %Note: Object
121.24233 11.43553 170.94529 61.42819 @E
 0 O 0 @g
0.00 0.15 1.00 0.00 k
/$fm 0 def
136.94854 59.13354 m
136.94854 59.13354 138.75307 58.99975 141.09250 58.82145 C
141.69402 58.77694 142.29553 58.75483 142.89704 58.73244 C
145.97121 58.62104 148.66696 58.15332 151.54101 57.79672 C
153.43455 57.57392 156.57591 56.37090 156.79871 53.98724 C
157.11052 50.46718 156.08580 46.59080 159.07096 45.14258 C
162.12302 43.07074 168.94035 38.28104 168.94035 38.28104 C
170.94529 34.58268 L
164.95257 29.14696 L
135.52271 11.43553 L
122.11143 16.00271 L
122.11143 26.85231 L
122.66816 41.42211 L
121.24233 54.56636 L
123.51487 59.71266 L
129.24028 61.42819 L
136.94854 59.13354 L
@c
F

@rax %Note: Object
22.68340 11.43553 76.66356 65.58009 @E
 0 O 0 @g
0.00 0.15 1.00 0.00 k
/$fm 0 def
51.84567 65.54948 m
51.55597 65.81707 46.34277 64.27984 46.00857 64.21294 C
43.58041 63.85635 40.50595 62.18561 40.50595 59.53436 C
40.50595 58.17543 40.39455 56.77200 39.77065 55.54658 C
39.28054 54.58876 38.16680 53.14054 38.18891 52.82872 C
37.81020 51.78161 37.11969 50.31128 36.16157 49.68737 C
35.04784 49.57597 30.10195 49.13065 30.10195 49.13065 C
25.80236 49.13065 L
23.24041 46.01169 L
25.24535 37.70164 L
24.66595 31.15191 L
22.68340 23.71096 L
27.51761 21.14901 L
64.09871 11.43553 L
72.38608 13.99776 L
76.66356 24.57978 L
75.79474 28.56756 L
71.80696 36.56551 L
71.80696 36.56551 54.43002 61.80690 51.84567 65.54948 C
@c
F

@rax %Note: Object
21.40469 8.50394 171.35121 184.25197 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
70.47014 155.21981 m
69.86863 175.15871 77.64378 183.95887 93.79559 184.24828 C
109.92501 184.56038 120.03931 176.04992 122.11143 164.88850 C
124.16088 153.74948 122.98025 139.06800 127.10154 131.44876 C
131.20072 123.80740 133.82957 117.94819 140.89181 109.14831 C
147.93194 100.34844 152.32054 91.39238 154.37027 80.52066 C
156.44211 69.67106 157.60063 64.54715 152.32054 58.95524 C
147.04072 53.38573 137.66145 44.29616 130.62161 54.56636 C
127.07943 59.71266 126.70072 66.10649 132.67134 67.46542 C
136.48082 68.35663 139.22107 68.06693 142.05033 66.59660 C
144.90198 65.12627 145.57039 65.81707 142.16173 68.35663 C
138.73096 70.89647 138.04016 68.55732 139.22107 72.65650 C
140.40170 76.75569 141.93893 84.12973 138.73096 92.23909 C
137.23824 95.98167 132.18094 106.22976 127.43575 108.74721 C
127.01254 108.99241 125.76501 109.50463 126.61143 108.45751 C
127.88135 106.87578 134.72079 96.80598 136.65912 90.81326 C
138.73096 84.37465 139.02038 78.22602 137.95115 74.32724 C
136.88192 70.40636 135.01049 68.84674 132.76035 68.84674 C
130.51020 68.84674 128.46047 67.77751 128.46047 72.94592 C
128.46047 78.13672 128.99537 85.95666 126.21061 92.57329 C
123.42586 99.16753 120.03931 103.71231 119.30428 106.49707 C
118.59137 109.28183 116.96513 116.76728 113.60098 121.02265 C
110.21471 125.27773 108.74438 128.06249 110.50441 132.91909 C
112.26416 137.75357 110.95002 139.06800 107.42995 140.09272 C
103.90989 141.11773 99.20920 142.58806 98.05068 144.94932 C
96.87005 147.28876 97.60507 151.98945 100.23392 153.14797 C
102.88517 154.32860 107.27405 152.72447 107.42995 149.33820 C
107.58586 145.97433 105.95962 144.21430 106.40523 143.47899 C
106.85055 142.74397 109.18998 141.56306 110.37061 142.87748 C
111.52913 144.21430 111.84094 148.31348 110.66031 152.12296 C
109.47940 155.93272 108.90028 158.58369 104.64520 159.45250 C
100.39011 160.34372 98.47417 160.05402 96.42444 157.40306 C
94.37471 154.77420 93.48378 150.51912 94.08529 147.42227 C
94.66441 144.34781 93.48378 146.10784 91.43405 146.26375 C
89.38460 146.39754 89.96372 146.55345 87.91427 146.39754 C
85.86454 146.26375 86.59984 147.57817 86.44365 149.78381 C
86.31014 151.98945 86.02044 156.53424 82.92387 158.29427 C
79.84942 160.05402 74.56932 158.00457 74.70312 150.65263 C
74.85902 143.32309 77.35436 139.80331 78.82469 142.45427 C
80.29502 145.08312 79.55972 143.76869 78.08939 144.94932 C
76.61906 146.10784 75.59433 150.96472 77.19817 152.41266 C
78.82469 153.88299 80.71824 153.88299 81.76535 153.01417 C
82.79008 152.12296 84.39420 149.18230 84.10450 147.28876 C
83.81480 145.37282 83.65890 145.23902 81.76535 143.90249 C
79.84942 142.58806 79.11411 141.40715 76.90876 139.95921 C
74.70312 138.48888 73.83430 135.10233 75.59433 134.23351 C
77.35436 133.34258 77.51027 133.49849 78.95820 131.29285 C
80.42854 129.08721 82.92387 128.06249 89.09490 129.08721 C
95.24381 130.11222 97.78337 131.58255 102.43956 133.20879 C
105.82583 134.36731 104.64520 134.23351 105.82583 135.54794 C
106.98435 136.86236 108.90028 134.96882 107.14025 133.78791 C
105.38022 132.60728 101.41483 131.44876 98.47417 130.42403 C
95.55562 129.37691 92.16935 126.45836 86.02044 126.74806 C
79.84942 127.03776 84.10450 126.90397 82.18857 127.03776 C
80.29502 127.19367 79.40381 126.90397 81.45354 125.43364 C
83.52539 123.96331 83.36948 123.51770 85.12923 122.93858 C
86.88926 122.33707 89.22869 122.33707 92.03556 123.36180 C
94.82031 124.40891 101.86044 127.48337 104.06580 128.95370 C
106.24904 130.42403 108.00907 128.50809 105.82583 127.03776 C
103.62019 125.56743 103.01868 126.01304 100.96923 124.69861 C
98.91950 123.36180 95.11002 121.17855 92.61496 118.81701 C
90.11962 116.47786 89.54050 116.32195 86.44365 116.18816 C
83.36948 116.03225 81.45354 119.26261 80.13912 120.73294 C
78.82469 122.20328 78.95820 123.07209 77.35436 124.83213 C
75.75024 126.59216 75.59433 126.16894 75.30463 124.25301 C
75.01493 122.33707 72.80957 117.50258 70.89364 114.27222 C
68.99981 111.04186 68.84391 107.07647 69.13361 104.29143 C
69.42302 101.50668 68.68800 101.21726 66.50476 97.98690 C
64.29912 94.75654 60.62315 85.22135 60.04403 82.14690 C
59.46463 79.07244 58.72961 72.74551 59.01931 69.09194 C
59.30872 65.41597 58.28400 64.68066 55.63304 67.17600 C
53.00419 69.67106 52.11298 72.45581 52.26888 76.13178 C
52.40268 79.27313 52.82589 81.47849 53.22699 82.63701 C
53.62781 83.79553 53.24910 84.59745 52.40268 83.17162 C
50.59814 80.05266 50.50885 74.66145 50.95446 72.74551 C
51.37767 70.85197 51.53357 67.46542 56.36806 62.92091 C
61.22466 58.37613 68.26479 52.07131 74.12400 47.81622 C
80.00532 43.56085 82.05506 38.28104 73.38869 34.47128 C
78.82469 27.11962 81.76535 23.30986 79.40381 18.47565 C
84.26041 21.26041 82.38926 27.83254 80.04983 29.59257 C
77.68828 31.35231 79.11411 32.71153 81.16384 31.37471 C
83.21329 30.06028 83.94860 27.43143 92.03556 27.56523 C
100.10041 27.72113 108.78888 28.52306 113.64548 35.58529 C
118.47997 42.62513 119.41569 36.69931 118.23477 32.57773 C
117.07654 28.47855 114.18009 19.21068 118.72488 20.07950 C
119.30428 25.51550 120.64082 30.21619 120.64082 36.07540 C
120.64082 41.95701 121.22022 44.78627 120.77461 53.29644 C
120.32901 61.49509 123.87118 62.05181 127.52504 62.05181 C
131.20072 62.05181 130.02009 59.69055 127.68094 59.84646 C
125.31940 60.00236 122.84646 59.11115 122.69055 53.09603 C
122.53465 47.08091 122.69055 47.66003 123.71528 42.24643 C
124.74000 36.81071 124.89619 35.20658 124.00498 29.19146 C
123.13616 23.17635 122.40085 19.94598 126.36652 16.27002 C
130.30980 12.59405 136.32491 13.64117 139.42148 15.98031 C
142.49594 18.31975 148.35515 23.75546 153.63496 25.51550 C
158.93717 27.27553 164.50696 28.58995 167.44762 31.53061 C
170.36617 34.47128 169.63087 36.52101 166.55641 38.12513 C
163.48195 39.75137 160.54129 39.01606 158.20214 41.64491 C
155.84060 44.29616 154.68208 50.15537 155.55090 53.25194 C
156.44211 56.32639 157.46683 55.01197 157.46683 52.80633 C
157.46683 50.60098 157.60063 48.55124 159.80627 45.76649 C
162.01162 42.98173 164.06135 41.64491 167.58113 39.46167 C
171.10120 37.25631 173.30683 33.73625 168.89556 30.63940 C
164.50696 27.56523 162.01162 25.80520 158.33565 24.33487 C
154.68208 22.86454 148.66696 19.34447 144.99099 15.69090 C
141.31531 12.01493 139.26557 8.78457 132.06983 8.78457 C
124.89619 8.78457 121.59893 10.52220 119.46019 14.79969 C
117.98986 17.74035 117.25455 17.29474 113.89068 17.45065 C
110.50441 17.58444 99.20920 17.74035 90.40932 17.58444 C
81.60945 17.45065 78.66879 15.98031 74.70312 12.74995 C
70.75984 9.51959 69.28951 7.02454 61.80406 9.51959 C
54.31861 12.01493 50.35294 14.79969 39.21392 17.00532 C
28.05250 19.21068 34.06762 18.18595 27.31720 19.65628 C
20.56677 21.10450 21.01238 24.33487 21.90359 26.98583 C
22.77241 29.61468 24.97805 33.73625 23.06211 39.14986 C
21.16828 44.58586 21.90359 50.15537 27.02750 50.15537 C
32.17380 50.15537 37.00828 49.13065 39.05773 55.88079 C
41.10746 62.63121 41.70898 57.35112 41.10746 55.59109 C
40.52835 53.83134 40.23865 48.99685 35.69386 48.26154 C
31.14907 47.52652 30.12435 48.55124 27.31720 48.55124 C
24.53244 48.55124 23.37392 46.63531 24.82214 43.40494 C
26.29247 40.17458 27.91871 36.81071 27.62901 34.02595 C
27.31720 31.24091 27.02750 30.21619 24.97805 27.56523 C
22.92831 24.93638 23.21802 23.59956 26.89398 22.73074 C
30.54756 21.83953 37.16419 20.07950 43.31310 18.60917 C
49.48413 17.16123 49.92973 17.16123 60.62315 14.35408 C
71.33896 11.56932 74.27991 16.55972 75.14872 22.57483 C
76.03994 28.58995 71.91836 34.31537 68.10888 40.04107 C
64.29912 45.76649 60.19994 52.36072 55.20954 58.37613 C
50.21915 64.39124 47.27849 64.83685 44.78343 63.52243 C
42.28809 62.18561 41.84277 62.47531 41.70898 65.86157 C
41.55307 69.22545 41.26337 71.43109 44.04813 76.42148 C
46.83288 81.41187 49.32822 86.84759 52.26888 95.20214 C
55.20954 103.55641 57.83839 105.18265 62.82879 112.37868 C
67.81918 119.55231 65.61354 116.76728 69.13361 121.60176 C
72.65339 126.45836 71.62866 125.56743 71.33896 133.20879 C
71.04954 140.82803 70.75984 145.23902 70.47014 155.21981 C
@c
56.45707 95.55846 m
57.21477 94.64513 58.28400 96.80598 59.39802 97.63030 C
60.40035 98.54391 60.82384 99.85833 60.60104 101.12797 C
60.48964 101.81877 59.37562 101.59597 59.15282 101.35077 C
58.46230 100.66025 58.61820 99.54624 58.12809 98.58841 C
57.57109 97.42989 55.69965 96.49417 56.45707 95.55846 C
@c
119.52709 126.21345 m
121.10882 124.87663 122.08904 123.71811 122.95786 125.70094 C
123.84907 127.68378 123.84907 128.48570 121.71033 129.28791 C
119.59398 130.11222 118.63587 130.98104 117.67805 132.07266 C
116.71994 133.18639 116.38573 131.29285 117.16554 129.44381 C
118.12337 127.17128 118.68038 126.90397 119.52709 126.21345 C
@c
86.46605 144.41471 m
85.37443 144.63751 84.06000 144.54850 83.32469 143.67969 C
83.03528 143.38998 83.16879 142.56567 83.68129 142.34287 C
84.34970 142.05317 84.79531 142.72157 84.92882 143.23408 C
84.99572 143.45688 85.08472 143.74630 85.30753 143.81320 C
85.59723 143.96910 86.02044 143.83559 86.33225 143.96910 C
86.68885 144.10290 86.55506 144.41471 86.46605 144.41471 C
@c
91.65685 144.21430 m
92.10246 143.54589 92.90438 143.54589 93.57279 143.25619 C
93.92939 143.10028 94.66441 142.87748 94.88721 143.38998 C
95.39972 145.01622 93.19408 144.50400 92.16935 144.50400 C
91.94655 144.50400 91.43405 144.57061 91.65685 144.21430 C
@c
102.35055 151.32104 m
103.35288 151.27654 104.71209 149.49411 104.84561 147.42227 C
104.86800 147.11046 105.71443 147.13285 105.89272 147.44466 C
106.36044 148.26898 106.02652 149.18230 105.80372 150.16252 C
105.62542 150.96472 104.66731 151.78876 103.86539 152.14535 C
103.33077 152.41266 102.77376 152.50167 102.06085 152.41266 C
101.88255 152.32365 101.25893 151.38794 102.35055 151.32104 C
@c
80.49543 151.83354 m
79.58211 151.76665 79.91631 151.05373 79.96082 150.47461 C
81.23074 149.76170 81.34214 148.15757 81.60945 146.88765 C
81.63156 146.39754 82.36687 146.62035 82.43376 146.77625 C
82.99077 147.80098 82.29997 148.95950 82.05506 150.16252 C
81.83225 150.78643 81.40876 151.49934 80.82964 151.92255 C
80.74063 152.01156 80.58444 151.83354 80.49543 151.83354 C
@c
108.52157 174.31228 m
107.60825 175.04731 106.18243 175.33701 105.75893 174.13398 C
105.31361 173.10926 105.49162 172.06214 105.24671 170.94813 C
105.24671 170.59181 104.80110 170.50280 104.55591 170.16860 C
104.19959 169.74510 104.28860 169.21049 104.46690 169.05458 C
105.31361 168.18576 106.87294 169.90129 108.00907 170.50280 C
108.85578 171.03742 110.08091 170.34661 111.01663 170.94813 C
111.28394 171.12643 111.37323 171.54964 111.10592 171.88384 C
110.50441 172.93096 109.45729 173.53247 108.52157 174.31228 C
@c
F

@rax %Note: Object
133.45087 54.87817 139.04504 60.84340 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
134.94359 57.66321 m
135.07739 58.26472 135.38920 59.44535 135.96831 59.62365 C
136.16901 59.69055 136.34702 59.60126 136.41392 59.40085 C
136.54772 59.02214 136.14661 56.86101 136.30252 56.37090 C
136.48082 55.85868 137.08233 55.92529 137.50554 56.05909 C
138.50816 56.39329 139.08728 57.57392 139.04277 57.68532 C
139.04277 57.72983 139.02038 57.72983 138.97587 57.72983 C
138.81997 57.68532 138.68646 57.12831 138.24085 56.99480 C
137.95115 56.90551 137.72835 56.95030 137.63934 57.23972 C
137.55005 57.55181 137.92876 59.77956 137.75074 60.29206 C
137.59483 60.80428 137.08233 60.93808 136.59222 60.78217 C
135.50060 60.42557 135.03260 58.75483 134.74318 57.77461 C
134.72079 57.77461 L
134.87669 60.06926 L
133.51776 59.62365 L
133.45087 54.87817 L
134.72079 55.30167 L
134.74318 56.12598 134.78769 57.06170 134.94359 57.66321 C
@c
F

@rax %Note: Object
139.43254 57.04838 142.36498 64.01254 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
140.82520 57.15071 m
141.91682 57.50702 142.40693 58.79934 142.36214 58.95524 C
142.34003 58.99975 142.31764 59.02214 142.27313 59.02214 C
142.18413 58.97764 141.98343 58.24233 141.35981 58.04192 C
141.09250 57.95263 140.84731 58.01953 140.78041 58.19783 C
140.69140 58.46513 140.75830 58.93285 140.75830 59.33395 C
140.80280 61.47269 L
142.29553 61.96280 L
142.27313 62.47531 L
140.78041 61.98520 L
140.84731 64.01254 L
139.51077 63.25483 L
139.44387 58.73244 L
139.44387 58.24233 139.39937 57.81912 139.48838 57.59631 C
139.66668 57.01691 140.26819 56.95030 140.82520 57.15071 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
